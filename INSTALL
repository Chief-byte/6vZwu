INSTALL file for 3D Forest, Copyright 2020 VUKOZ
================================================

This document describes how to build, edit and debug 3D Forest.


Build Prerequisites
===================

The code uses C++17 and CMake.
Qt5 and OpenGL are required for GUI application.

Downloading and installation of other 3rd party libraries is not required.
3rd party libraries are included in "3rdparty" directory.


CMake options
=============
-DBUILD_EXAMPLES=ON    - Build all examples.


Build Using "Unix Makefiles" on Linux
=======================================
1.  Install Qt
    - Download Qt installer from https://www.qt.io/download
        - "Downloads for open source users" button in "Go open source"
        - "Install Qt binaries button"
        - Recommended download was Qt Online Installer for Linux (64-bit)
        - "Download" button saved file "qt-unified-linux-x64-4.1.1-online.run"
    - Run the installer
        - Checked "make file executable" in file properties of downloaded file
        - Open "qt-unified-linux-x64-4.1.1-online.run", shows "Qt Setup" window
        - "/home/user/Qt" is directory where Qt will be installed, default
        - Selected "Custom installation"
        - Additionally checked: Qt - Qt 5.15.2 - Desktop gcc 64-bit
        - Additionally checked: Qt - Qt 5.15.2 - Sources
        - "Next", "Install", installation took less than 10 minutes

2.  Installation of other tools: OpenGL and CMake
    $ sudo apt-get update
    $ sudo apt install mesa-common-dev libglu1-mesa-dev
    $ sudo apt install cmake

3.  Get 3D Forest source code
    $ cd /home/user/
    $ git clone https://github.com/VUKOZ-OEL/3D-Forest_1.0.git

4.  Build 3D Forest
    $ cd /home/user/3D-Forest_1.0
    $ mkdir build
    $ cd /home/user/3D-Forest_1.0/build
    $ PATH=$PATH:/home/user/Qt/5.15.2/gcc_64/bin
    $ cmake -G "Unix Makefiles" .. -DCMAKE_INSTALL_PREFIX=..
    $ make
    $ make install

5.  Start 3D Forest application
    $ cd /home/user/3D-Forest_1.0/bin
    $ LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/home/user/3D-Forest_1.0/bin
      :/home/user/Qt/5.15.2/gcc_64/lib ./3dforest

6.  We can see that we did not store modified PATH and LD_LIBRARY_PATH to user
    or system variables.
    One could modify "/home/<user>/.bashrc" or "/home/<user>/.profile" to make
    the change persistent.


Build Using "MinGW Makefiles" on Windows
=======================================

1.  Installation of msys2 and mingw-w64
    - Open https://www.msys2.org/ and follow Installation instructions
    - Default installation will create "C:\msys64"

2.  Setup Windows PATH variable
    - Run "systempropertiesadvanced" from the search box
    - Click "Environment Variables"
    - In "System variables" select "Path" and click "Edit..."
    - Click "New" and add "C:\msys64\usr\bin", hit enter
    - Click "New" and add "C:\msys64\usr\local\bin", hit enter
    - Click "New" and add "C:\msys64\mingw64\bin", hit enter
    - "Move Up" these three new items to top

3.  Run "MSYS2 MSYS" Windows application and install additional packages
    - Required
        $ pacman -S mingw-w64-x86_64-clang
        $ pacman -S mingw-w64-x86_64-cmake
        $ pacman -S mingw-w64-x86_64-make
    - Optional
        $ pacman -S mingw-w64-x86_64-python
        $ pacman -S mingw-w64-x86_64-python-pip
        $ pacman -S mingw-w64-x86_64-doxygen
        $ pacman -S mingw-w64-x86_64-graphviz

4.  Install Qt
    - Download Qt installer
    - Run the installer
    - Run "systempropertiesadvanced" from the search box
    - Click "Environment Variables"
    - In "System variables" select "Path" and click "Edit..."
    - Click "New" and add "C:\Qt\5.15.0\mingw81_64\bin", hit enter

5.  Open "cmd" terminal, navigate to the project folder and build it
    - Build
        > mkdir build
        > cd build
        > cmake -G "MinGW Makefiles" .. -DCMAKE_INSTALL_PREFIX=..
        > mingw32-make
        > mingw32-make install
    - Run
        executables can be found in directory bin
    - Extra command: Generate API documentation
        > mingw32-make doxygen
    - Extra command: Reformat all source files
        > mingw32-make format
