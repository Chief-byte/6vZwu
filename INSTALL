INSTALL file for 3D Forest, Copyright 2020 VUKOZ
================================================

This document describes how to build, edit and debug 3D Forest.


Build Prerequisites
===================

The code uses C++17 and CMake.
Qt5 and OpenGL are required for GUI application.

Downloading and installation of other 3rd party libraries is not required.
3rd party libraries are included in "3rdparty" directory.


CMake options
=============
-DBUILD_EXAMPLES=ON    - Build all examples.


Build Using "Unix Makefiles" on Windows
=======================================

1.  Installation of msys2 and mingw-w64
    - Open https://www.msys2.org/ and follow Installation instructions
    - Default installation will create "C:\msys64"

2.  Setup Windows PATH variable
    - Run "systempropertiesadvanced" from the search box
    - Click "Environment Variables"
    - In "System variables" select "Path" and click "Edit..."
    - Click "New" and add "C:\msys64\usr\bin", hit enter
    - Click "New" and add "C:\msys64\usr\local\bin", hit enter
    - Click "New" and add "C:\msys64\mingw64\bin", hit enter
    - "Move Up" these three new items to top

3.  Run "MSYS2 MSYS" Windows application and install additional packages
    - Required
        $ pacman -S mingw-w64-x86_64-clang
        $ pacman -S mingw-w64-x86_64-cmake
        $ pacman -S mingw-w64-x86_64-make
    - Optional
        $ pacman -S mingw-w64-x86_64-python
        $ pacman -S mingw-w64-x86_64-python-pip
        $ pacman -S mingw-w64-x86_64-doxygen
        $ pacman -S mingw-w64-x86_64-graphviz

4.  Install Qt
    - Download Qt installer
    - Run the installer
    - Run "systempropertiesadvanced" from the search box
    - Click "Environment Variables"
    - In "System variables" select "Path" and click "Edit..."
    - Click "New" and add "C:\Qt\5.15.0\mingw81_64\bin", hit enter

5.  Open "cmd" terminal, navigate to the project folder and build it
    - Build
        > mkdir build
        > cd build
        > cmake -G "MinGW Makefiles" .. -DCMAKE_INSTALL_PREFIX=..
        > mingw32-make
        > mingw32-make install
    - Run
        executables can be found in directory bin
    - Extra command: Generate API documentation
        > mingw32-make doxygen
    - Extra command: Reformat all source files
        > mingw32-make format


Edit Source Code with Visual Studio Code
========================================

1.  Download and install Visual Studio Code from https://code.visualstudio.com/
    Tested with version 1.56.2.

2.  In file explorer, right-click on folder "3D-Forest_1.0" and select
    "Open with Code". This will open 3D Forest workspace.

3.  Install extension "C/C++ IntelliSense, debugging, and code browsing".
    Extension identifier is "ms-vscode.cpptools". Tested with v1.4.0.

4.  Install extension "CMake Tools".
    Extension identifier is "ms-vscode.cmake-tools". Tested with v1.7.3.

5.  Optionally install extension "CMake langage support for Visual Studio Code".
    Extension identifier is "twxs.cmake".

6.  Optionally install extension "Code Spell Checker".
    Extension identifier is "streetsidesoftware.code-spell-checker".

7.  Add the following lines to "3D-Forest_1.0/.vscode/settings.json":
    {
        "files.eol": "\n",
        "C_Cpp.default.includePath":[
            "C:/Qt/5.15.0/mingw81_64/include/**",
            "${workspaceRoot}/3rdparty/widgets",
            "${workspaceRoot}/modules/visualization/src/editor",
            "${workspaceRoot}/modules/visualization/src/opengl",
            "${workspaceRoot}/modules/visualization/src/widgets",
            "${workspaceRoot}/modules/applications/3dforest/src",
            "${workspaceRoot}/modules/applications/3dforest/plugins/heightmap",
            "${workspaceRoot}/modules/applications/console/src",
            "${workspaceRoot}/modules/core/src/common",
            "${workspaceRoot}/modules/core/src/io",
            "${workspaceRoot}/modules/core/src/math",
            "${workspaceRoot}/modules/core/src/scene",
            "${workspaceRoot}/modules/editor/src"]
    }

8. Close the window and reopen to the same folder to apply new settings.


Build and Debug in Visual Studio Code
=====================================

1.  Install GDB for msys2:
    - Open windows Command prompt "cmd".
    - Search for gdb to find a specific package in the repository:
        > pacman -Ss gdb
    - For example use the following command to install gdb package:
        > pacman -S mingw-w64-x86_64-gdb

2.  Open Visual Studio Code

3.  Add the following lines to settings.json:
    {
        "cmake.configureOnOpen": false,
        "cmake.mingwSearchDirs": [
            "C:\\msys64\\mingw-w64\\bin"
        ],
        "cmake.generator": "MinGW Makefiles",
    }

4.  Select a kit:
    - Open the Command Palette.
    - Run "CMake: Select a Kit".
    - Click "[Scan for kits]".
    - Select the compiler. For example "GCC 10.1.0 Using compilers:
      C= C:\msys64\mingw-w64\bin\gcc.exe, CXX= C:\msys64\mingw-w64\bin\g++.exe".

5.  Select a variant:
    - Open the Command Palette.
    - Run "CMake: Select Variant".
    - Select "Debug" to include debug information with your build.

6.  To build click "Build the selected target".

7.  Copy shared libraries to the same folder as "3dforest.exe":
    build\modules\applications\3dforest\
    - libcore.dll
    - libeditor.dll
    - libvisualization.dll

8.  To debug click "Launch the debugger for the selected target: [3dforest]".
